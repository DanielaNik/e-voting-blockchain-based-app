{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\danie\\\\truffleProjects\\\\ElectionSystem\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\danie\\\\truffleProjects\\\\ElectionSystem\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\danie\\\\truffleProjects\\\\ElectionSystem\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\danie\\\\truffleProjects\\\\ElectionSystem\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\danie\\\\truffleProjects\\\\ElectionSystem\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\danie\\\\truffleProjects\\\\ElectionSystem\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\danie\\\\truffleProjects\\\\ElectionSystem\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\danie\\\\truffleProjects\\\\ElectionSystem\\\\src\\\\components\\\\VotingPage.js\";\nimport React, { Component } from 'react';\n\nvar VotingPage = /*#__PURE__*/function (_Component) {\n  _inherits(VotingPage, _Component);\n\n  function VotingPage(props) {\n    var _this;\n\n    _classCallCheck(this, VotingPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(VotingPage).call(this, props));\n    _this.handleVote = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var selectedCandidate, _this$props, account, voting;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              selectedCandidate = _this.state.selectedCandidate;\n              _this$props = _this.props, account = _this$props.account, voting = _this$props.voting;\n\n              if (!(selectedCandidate !== null)) {\n                _context.next = 13;\n                break;\n              }\n\n              _context.prev = 3;\n              _context.next = 6;\n              return voting.methods.castVote(selectedCandidate, _this.state.voterId, Math.floor(Date.now() / 1000));\n\n            case 6:\n              userHasVoted = true;\n              console.log(\"Voted for candidate \".concat(selectedCandidate));\n              _context.next = 13;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](3);\n              console.error(_context.t0);\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[3, 10]]);\n    }));\n\n    _this.handleCandidateSelection = function (candidateId) {\n      _this.setState({\n        selectedCandidate: candidateId\n      });\n    };\n\n    _this.state = {\n      voterId: null,\n      candidates: [],\n      // Store the list of candidates here\n      selectedCandidate: null,\n      userHasVoted: false\n    };\n    return _this;\n  }\n\n  _createClass(VotingPage, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var searchParams, voterId, voterDetails, userHasVoted, _voting, candidatesCount, candidates, i, candidate;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                searchParams = new URLSearchParams(this.props.location.search);\n                voterId = searchParams.get('voterId');\n                this.setState({\n                  voterId: voterId\n                });\n                _context2.next = 5;\n                return voting.methods.getVoterDetails(voterId).call();\n\n              case 5:\n                voterDetails = _context2.sent;\n                userHasVoted = voterDetails.hasVoted;\n                this.setState({\n                  userHasVoted: userHasVoted\n                });\n\n                if (!(userHasVoted == false)) {\n                  _context2.next = 24;\n                  break;\n                }\n\n                _voting = this.props.voting;\n                _context2.next = 12;\n                return _voting.methods.getCandidatesCount().call();\n\n              case 12:\n                candidatesCount = _context2.sent;\n                candidates = [];\n                i = 0;\n\n              case 15:\n                if (!(i < candidatesCount)) {\n                  _context2.next = 23;\n                  break;\n                }\n\n                _context2.next = 18;\n                return _voting.methods.getCandidate(i).call();\n\n              case 18:\n                candidate = _context2.sent;\n                candidates.push(candidate);\n\n              case 20:\n                i++;\n                _context2.next = 15;\n                break;\n\n              case 23:\n                this.setState({\n                  candidates: candidates\n                });\n\n              case 24:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          candidates = _this$state.candidates,\n          selectedCandidate = _this$state.selectedCandidate;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }\n      }, \"Voting Page\"), /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }\n      }, candidates.map(function (candidate) {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          key: candidate.id,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }\n        }, candidate.name, \" - \", candidate.party, /*#__PURE__*/React.createElement(\"button\", {\n          onClick: function onClick() {\n            return _this2.handleCandidateSelection(candidate.id);\n          },\n          disabled: selectedCandidate === candidate.id,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }\n        }, selectedCandidate === candidate.id ? 'Selected' : 'Select'));\n      })), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.handleVote,\n        disabled: selectedCandidate === null,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }\n      }, \"Vote\"));\n    }\n  }]);\n\n  return VotingPage;\n}(Component);\n\nexport default VotingPage;","map":{"version":3,"sources":["C:/Users/danie/truffleProjects/ElectionSystem/src/components/VotingPage.js"],"names":["React","Component","VotingPage","props","handleVote","selectedCandidate","state","account","voting","methods","castVote","voterId","Math","floor","Date","now","userHasVoted","console","log","error","handleCandidateSelection","candidateId","setState","candidates","searchParams","URLSearchParams","location","search","get","getVoterDetails","call","voterDetails","hasVoted","getCandidatesCount","candidatesCount","i","getCandidate","candidate","push","map","id","name","party"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass VotingPage extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      voterId: null,\r\n      candidates: [], // Store the list of candidates here\r\n      selectedCandidate: null,\r\n      userHasVoted: false\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const searchParams = new URLSearchParams(this.props.location.search);\r\n    const voterId = searchParams.get('voterId');\r\n    this.setState({ voterId });\r\n    const voterDetails = await voting.methods.getVoterDetails(voterId).call();\r\n    const userHasVoted = voterDetails.hasVoted;\r\n    this.setState({userHasVoted})\r\n    if(userHasVoted==false){\r\n      const { voting } = this.props;\r\n      const candidatesCount = await voting.methods.getCandidatesCount().call();\r\n      const candidates = [];\r\n\r\n      for (let i = 0; i < candidatesCount; i++) {\r\n        const candidate = await voting.methods.getCandidate(i).call();\r\n        candidates.push(candidate);\r\n      }\r\n\r\n      this.setState({ candidates });\r\n    }\r\n  }\r\n\r\n  handleVote = async () => {\r\n    const { selectedCandidate } = this.state;\r\n    const { account, voting } = this.props;\r\n\r\n\r\n    if (selectedCandidate !== null) {\r\n      try {\r\n        // Call the function to cast the vote using selectedCandidate\r\n        await voting.methods\r\n        .castVote(selectedCandidate, this.state.voterId, Math.floor(Date.now() / 1000))\r\n        userHasVoted=true;\r\n        console.log(`Voted for candidate ${selectedCandidate}`);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  handleCandidateSelection = candidateId => {\r\n    this.setState({ selectedCandidate: candidateId });\r\n  };\r\n\r\n  render() {\r\n    const { candidates, selectedCandidate } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <h2>Voting Page</h2>\r\n        <ul>\r\n          {candidates.map(candidate => (\r\n            <li key={candidate.id}>\r\n              {candidate.name} - {candidate.party}\r\n              <button\r\n                onClick={() => this.handleCandidateSelection(candidate.id)}\r\n                disabled={selectedCandidate === candidate.id}\r\n              >\r\n                {selectedCandidate === candidate.id ? 'Selected' : 'Select'}\r\n              </button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <button onClick={this.handleVote} disabled={selectedCandidate === null}>\r\n          Vote\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default VotingPage;\r\n"]},"metadata":{},"sourceType":"module"}