{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\danie\\\\truffleProjects\\\\ElectionSystem\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\danie\\\\truffleProjects\\\\ElectionSystem\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\danie\\\\truffleProjects\\\\ElectionSystem\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\danie\\\\truffleProjects\\\\ElectionSystem\\\\src\\\\components\\\\VotingContext.js\";\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport Web3 from 'web3';\nimport Voting from '../truffle_abis/Voting.json';\nexport var VotingContext = createContext();\nexport function useVotingContext() {\n  return useContext(VotingContext);\n}\nexport function VotingProvider(_ref) {\n  var children = _ref.children;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      voting = _useState2[0],\n      setVoting = _useState2[1];\n\n  useEffect(function () {\n    var loadVotingContract = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var web3, networkId, votingData, votingContract;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                // Load the contract instance as you were doing before\n                web3 = new Web3(window.ethereum);\n                _context.next = 3;\n                return web3.eth.net.getId();\n\n              case 3:\n                networkId = _context.sent;\n                votingData = Voting.networks[networkId];\n\n                if (votingData) {\n                  votingContract = new web3.eth.Contract(Voting.abi, votingData.address);\n                  setVoting(votingContract);\n                }\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function loadVotingContract() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    loadVotingContract();\n  }, []);\n  return /*#__PURE__*/React.createElement(VotingContext.Provider, {\n    value: voting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, children);\n}","map":{"version":3,"sources":["C:/Users/danie/truffleProjects/ElectionSystem/src/components/VotingContext.js"],"names":["React","createContext","useContext","useState","useEffect","Web3","Voting","VotingContext","useVotingContext","VotingProvider","children","voting","setVoting","loadVotingContract","web3","window","ethereum","eth","net","getId","networkId","votingData","networks","votingContract","Contract","abi","address"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,QAA3C,EAAqDC,SAArD,QAAsE,OAAtE;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AAEA,OAAO,IAAMC,aAAa,GAAGN,aAAa,EAAnC;AAEP,OAAO,SAASO,gBAAT,GAA4B;AACjC,SAAON,UAAU,CAACK,aAAD,CAAjB;AACD;AAED,OAAO,SAASE,cAAT,OAAsC;AAAA,MAAZC,QAAY,QAAZA,QAAY;;AAAA,kBACfP,QAAQ,CAAC,IAAD,CADO;AAAA;AAAA,MACpCQ,MADoC;AAAA,MAC5BC,SAD4B;;AAG3CR,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMS,kBAAkB;AAAA,2EAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AACzB;AACMC,gBAAAA,IAFmB,GAEZ,IAAIT,IAAJ,CAASU,MAAM,CAACC,QAAhB,CAFY;AAAA;AAAA,uBAGDF,IAAI,CAACG,GAAL,CAASC,GAAT,CAAaC,KAAb,EAHC;;AAAA;AAGnBC,gBAAAA,SAHmB;AAInBC,gBAAAA,UAJmB,GAINf,MAAM,CAACgB,QAAP,CAAgBF,SAAhB,CAJM;;AAKzB,oBAAIC,UAAJ,EAAgB;AACRE,kBAAAA,cADQ,GACS,IAAIT,IAAI,CAACG,GAAL,CAASO,QAAb,CAAsBlB,MAAM,CAACmB,GAA7B,EAAkCJ,UAAU,CAACK,OAA7C,CADT;AAEdd,kBAAAA,SAAS,CAACW,cAAD,CAAT;AACD;;AARwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA,sBAAlBV,kBAAkB;AAAA;AAAA;AAAA,OAAxB;;AAWAA,IAAAA,kBAAkB;AACnB,GAbQ,EAaN,EAbM,CAAT;AAeA,sBACE,oBAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAEF,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwCD,QAAxC,CADF;AAGD","sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport Web3 from 'web3';\r\nimport Voting from '../truffle_abis/Voting.json';\r\n\r\nexport const VotingContext = createContext();\r\n\r\nexport function useVotingContext() {\r\n  return useContext(VotingContext);\r\n}\r\n\r\nexport function VotingProvider({ children }) {\r\n  const [voting, setVoting] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const loadVotingContract = async () => {\r\n      // Load the contract instance as you were doing before\r\n      const web3 = new Web3(window.ethereum);\r\n      const networkId = await web3.eth.net.getId();\r\n      const votingData = Voting.networks[networkId];\r\n      if (votingData) {\r\n        const votingContract = new web3.eth.Contract(Voting.abi, votingData.address);\r\n        setVoting(votingContract);\r\n      }\r\n    };\r\n\r\n    loadVotingContract();\r\n  }, []);\r\n\r\n  return (\r\n    <VotingContext.Provider value={voting}>{children}</VotingContext.Provider>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}