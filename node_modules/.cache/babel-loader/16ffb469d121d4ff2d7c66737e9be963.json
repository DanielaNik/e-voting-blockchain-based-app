{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\danie\\\\truffleProjects\\\\ElectionSystem\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\danie\\\\truffleProjects\\\\ElectionSystem\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\danie\\\\truffleProjects\\\\ElectionSystem\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\danie\\\\truffleProjects\\\\ElectionSystem\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\danie\\\\truffleProjects\\\\ElectionSystem\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\danie\\\\truffleProjects\\\\ElectionSystem\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\danie\\\\truffleProjects\\\\ElectionSystem\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\danie\\\\truffleProjects\\\\ElectionSystem\\\\src\\\\components\\\\VotingPage.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router';\nimport { VotingContext } from './VotingContext';\nimport Web3 from 'web3';\n\nvar VotingPage = /*#__PURE__*/function (_Component) {\n  _inherits(VotingPage, _Component);\n\n  function VotingPage(props) {\n    var _this;\n\n    _classCallCheck(this, VotingPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(VotingPage).call(this, props));\n    _this.handleVote = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var selectedCandidate, voting, account, tx, _Web, web3, receipt;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              selectedCandidate = _this.state.selectedCandidate;\n              voting = _this.context;\n              account = _this.props.account;\n\n              if (!(selectedCandidate !== null)) {\n                _context.next = 21;\n                break;\n              }\n\n              _context.prev = 4;\n              _context.next = 7;\n              return voting.methods.castVote(selectedCandidate, _this.state.voterId, Math.floor(Date.now() / 1000)).send({\n                from: account\n              });\n\n            case 7:\n              tx = _context.sent;\n              // Get the transaction receipt\n              _Web = require('web3'); // Initialize Web3 with MetaMask provider\n\n              web3 = new _Web(window.ethereum);\n              _context.next = 12;\n              return web3.eth.getTransactionReceipt(tx.transactionHash);\n\n            case 12:\n              receipt = _context.sent;\n\n              // Check if the transaction was successful\n              if (receipt.status === '0x1') {\n                // Transaction was successful, now listen for the event\n                voting.events.VoteCasted({\n                  filter: {\n                    voter: account\n                  }\n                }, function (error, event) {\n                  if (!error) {\n                    console.log('VoteCasted event:', event); // Update userHasVoted for the specific user\n\n                    console.log('user has voted event:', _this.state.userHasVoted);\n                  } else {\n                    console.error('Error listening to VoteCasted event:', error);\n                  }\n                });\n              } else {\n                console.error('Transaction failed.');\n              } //localStorage.setItem('userHasVoted', true);\n\n\n              console.log(\"Voted for candidate \".concat(selectedCandidate));\n\n              _this.setState({\n                userHasVoted: true\n              }); //console.log('has voted',this.state.userHasVoted);\n\n\n              _context.next = 21;\n              break;\n\n            case 18:\n              _context.prev = 18;\n              _context.t0 = _context[\"catch\"](4);\n              console.error(_context.t0);\n\n            case 21:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[4, 18]]);\n    }));\n\n    _this.handleCandidateSelection = function (candidateId) {\n      _this.setState({\n        selectedCandidate: candidateId\n      });\n    };\n\n    _this.handleLogout = function () {\n      localStorage.setItem('loggedIn', false);\n      localStorage.removeItem('voterId');\n\n      _this.props.history.push('/');\n    };\n\n    _this.state = {\n      voterId: null,\n      candidates: [],\n      // Store the list of candidates here\n      selectedCandidate: null,\n      userHasVoted: false\n    };\n    return _this;\n  }\n\n  _createClass(VotingPage, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var voting, searchParams, voterId, candidatesCount, candidates, i, candidate;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                voting = this.context;\n                searchParams = new URLSearchParams(this.props.location.search);\n                voterId = searchParams.get('voterId');\n                this.setState({\n                  voterId: voterId\n                }); // if(this.state.userHasVoted==false){\n                // const voterDetails = await voting.methods.getVoterDetails(voterId).call();\n                // const userHasVoted = voterDetails.hasVoted;\n                // this.setState({userHasVoted:userHasVoted})\n                // }\n\n                if (!(this.state.userHasVoted == false)) {\n                  _context2.next = 19;\n                  break;\n                }\n\n                _context2.next = 7;\n                return voting.methods.getCandidatesCount().call();\n\n              case 7:\n                candidatesCount = _context2.sent;\n                candidates = [];\n                i = 0;\n\n              case 10:\n                if (!(i < candidatesCount)) {\n                  _context2.next = 18;\n                  break;\n                }\n\n                _context2.next = 13;\n                return voting.methods.getCandidate(i).call();\n\n              case 13:\n                candidate = _context2.sent;\n                candidates.push(candidate);\n\n              case 15:\n                i++;\n                _context2.next = 10;\n                break;\n\n              case 18:\n                this.setState({\n                  candidates: candidates\n                });\n\n              case 19:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.state.contract) {\n        this.state.contract.events.VoteCasted().unsubscribe();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          candidates = _this$state.candidates,\n          selectedCandidate = _this$state.selectedCandidate; // if(this.state.userHasVoted){\n      //   return(\n      //     <div>\n      //         <h5>You have voted successfully.</h5>\n      //         <button onClick={this.handleLogout}>\n      //           Logout\n      //         </button>\n      //         <button>\n      //           Results page\n      //         </button>\n      //     </div>\n      //   );\n      // }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 9\n        }\n      }, \"Voting Page\"), /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 9\n        }\n      }, candidates.map(function (candidate) {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          key: candidate.id,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }\n        }, candidate.name, \" - \", candidate.party, /*#__PURE__*/React.createElement(\"button\", {\n          onClick: function onClick() {\n            return _this2.handleCandidateSelection(candidate.id);\n          },\n          disabled: selectedCandidate === candidate.id,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }\n        }, selectedCandidate === candidate.id ? 'Selected' : 'Select'));\n      })), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.handleVote,\n        disabled: selectedCandidate === null || this.state.userHasVoted,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 9\n        }\n      }, \"Vote\"));\n    }\n  }]);\n\n  return VotingPage;\n}(Component);\n\nVotingPage.contextType = VotingContext;\nexport default VotingPage;","map":{"version":3,"sources":["C:/Users/danie/truffleProjects/ElectionSystem/src/components/VotingPage.js"],"names":["React","Component","withRouter","VotingContext","Web3","VotingPage","props","handleVote","selectedCandidate","state","voting","context","account","methods","castVote","voterId","Math","floor","Date","now","send","from","tx","require","web3","window","ethereum","eth","getTransactionReceipt","transactionHash","receipt","status","events","VoteCasted","filter","voter","error","event","console","log","userHasVoted","setState","handleCandidateSelection","candidateId","handleLogout","localStorage","setItem","removeItem","history","push","candidates","searchParams","URLSearchParams","location","search","get","getCandidatesCount","call","candidatesCount","i","getCandidate","candidate","contract","unsubscribe","map","id","name","party","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router';\r\nimport { VotingContext } from './VotingContext';\r\nimport Web3 from 'web3';\r\n\r\nclass VotingPage extends Component {\r\n\r\n  static contextType = VotingContext;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      voterId: null,\r\n      candidates: [], // Store the list of candidates here\r\n      selectedCandidate: null,\r\n      userHasVoted: false,\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const voting = this.context;\r\n    const searchParams = new URLSearchParams(this.props.location.search);\r\n    const voterId = searchParams.get('voterId');\r\n    this.setState({ voterId });\r\n    // if(this.state.userHasVoted==false){\r\n    // const voterDetails = await voting.methods.getVoterDetails(voterId).call();\r\n    // const userHasVoted = voterDetails.hasVoted;\r\n    // this.setState({userHasVoted:userHasVoted})\r\n    // }\r\n    \r\n    if(this.state.userHasVoted==false){\r\n      const candidatesCount = await voting.methods.getCandidatesCount().call();\r\n      const candidates = [];\r\n\r\n      for (let i = 0; i < candidatesCount; i++) {\r\n        const candidate = await voting.methods.getCandidate(i).call();\r\n        candidates.push(candidate);\r\n      }\r\n\r\n      this.setState({ candidates });\r\n    }\r\n  }\r\n\r\n  handleVote = async () => {\r\n    const { selectedCandidate } = this.state;\r\n    const  voting  = this.context;\r\n    const { account } = this.props\r\n\r\n\r\n    if (selectedCandidate !== null) {\r\n      try {\r\n        // Call the function to cast the vote using selectedCandidate\r\n        const tx = await voting.methods\r\n        .castVote(selectedCandidate, this.state.voterId, Math.floor(Date.now() / 1000))\r\n        .send({ from: account });\r\n\r\n      // Get the transaction receipt\r\n      const Web3 = require('web3');\r\n\r\n      // Initialize Web3 with MetaMask provider\r\n      const web3 = new Web3(window.ethereum);\r\n      const receipt = await web3.eth.getTransactionReceipt(tx.transactionHash);\r\n\r\n      // Check if the transaction was successful\r\n      if (receipt.status === '0x1') {\r\n        // Transaction was successful, now listen for the event\r\n        voting.events.VoteCasted({ filter: { voter: account } }, (error, event) => {\r\n          if (!error) {\r\n            console.log('VoteCasted event:', event);\r\n            // Update userHasVoted for the specific user\r\n            console.log('user has voted event:', this.state.userHasVoted);\r\n          } else {\r\n            console.error('Error listening to VoteCasted event:', error);\r\n          }\r\n        });\r\n      } else {\r\n        console.error('Transaction failed.');\r\n      }\r\n\r\n        //localStorage.setItem('userHasVoted', true);\r\n        console.log(`Voted for candidate ${selectedCandidate}`);\r\n        this.setState({ userHasVoted: true });\r\n        //console.log('has voted',this.state.userHasVoted);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  handleCandidateSelection = candidateId => {\r\n    this.setState({ selectedCandidate: candidateId });\r\n  };\r\n\r\n  handleLogout = () => {\r\n    localStorage.setItem('loggedIn',false);\r\n    localStorage.removeItem('voterId');\r\n  \r\n    this.props.history.push('/'); \r\n  };\r\n\r\n  componentWillUnmount() {\r\n    if (this.state.contract) {\r\n      this.state.contract.events.VoteCasted().unsubscribe();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { candidates, selectedCandidate } = this.state;\r\n\r\n    // if(this.state.userHasVoted){\r\n    //   return(\r\n    //     <div>\r\n    //         <h5>You have voted successfully.</h5>\r\n    //         <button onClick={this.handleLogout}>\r\n    //           Logout\r\n    //         </button>\r\n    //         <button>\r\n    //           Results page\r\n    //         </button>\r\n    //     </div>\r\n    //   );\r\n    // }\r\n\r\n    return (\r\n      <div>\r\n        <h2>Voting Page</h2>\r\n        <ul>\r\n          {candidates.map(candidate => (\r\n            <li key={candidate.id}>\r\n              {candidate.name} - {candidate.party}\r\n              <button\r\n                onClick={() => this.handleCandidateSelection(candidate.id)}\r\n                disabled={selectedCandidate === candidate.id}\r\n              >\r\n                {selectedCandidate === candidate.id ? 'Selected' : 'Select'}\r\n              </button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <button onClick={this.handleVote} disabled={selectedCandidate === null || this.state.userHasVoted}>\r\n          Vote\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default VotingPage;\r\n"]},"metadata":{},"sourceType":"module"}